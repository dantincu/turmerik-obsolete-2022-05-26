@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Primitives
@using Turmerik.AspNetCore.Services
@using Turmerik.AspNetCore.Settings
@using Turmerik.AspNetCore.UserSession
@using Turmerik.AspNetCore.AppStartup
@using Turmerik.AspNetCore.Infrastructure
@using Turmerik.Blazor.Core.Pages.Shared
@using Turmerik.Blazor.OpenId.Pages.Shared
@using Turmerik.Core.Cloneable
@using Turmerik.Core.Cloneable.Nested
@using Turmerik.Core.Helpers;
@inherits LayoutComponentBase

@inject NavigationManager NavManager;
@inject ITrmrkAppSettings AppSettings;
@inject IUserSessionsManager UserSessionsManager;
@inject IHttpContextAccessor HttpContextAccessor;
@inject ILocalStorageService LocalStorageService;

<PageTitle>Turmerik OneDrive Explorer</PageTitle>

<div class="page">
    <div class="top-row px-4 auth">
        <LoginDisplay />
    </div>
    <div class="sidebar trmrk-app-sidebar @SideBarSizeCssClass">
        <NavMenu SizeChangedCallback="@SizeChangedCallback" />
    </div>

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool sideBarLarge = false;
    private System.Security.Claims.ClaimsPrincipal User;

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    private string? SideBarSizeCssClass => sideBarLarge ? "trmrk-large" : "trmrk-small";

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        var userSession = await UserSessionsManager.TryAddOrUpdateUserSessionAsync();
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        User = (await AuthStat).User;

        if(!User.Identity.IsAuthenticated || !User.Claims.Any())
        {
            NavManager.NavigateTo($"{AppSettings.LoginRelUrl}?{QsKeys.RET_URL}={Uri.EscapeDataString(NavManager.Uri)}");
        }
    }

    private void SizeChangedCallback(MouseEventArgs e)
    {
        sideBarLarge = !sideBarLarge;
    }
}