@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Turmerik.AspNetCore.Infrastructure
@using Turmerik.Core.Helpers;

@inherits SimpleModalBase

@inject IJSRuntime jsRuntime;

<div class="modal fade" id="@ModalId" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        @if (ContentElementTemplate != null)
        {
            @ContentElementTemplate(null)
        }
        else
        {
            <div class="modal-content @CssClassH.ModalContent">
                @if (HeaderElementTemplate != null)
                {
                    @HeaderElementTemplate(null)
                }
                else
                {
                    <div class="modal-header">
                        @if (HeaderTemplate != null)
                        {
                            @HeaderTemplate(null)
                        }
                        else if (ModalTitle != null)
                        {
                            <h5 class="modal-title">@ModalTitle</h5>
                        }
                
                        @if (HasCloseButton)
                        {
                            <button type="button" class="btn btn-outline-dark close" data-dismiss="modal" aria-label="Close" @onmouseup=OnCloseModalClickAsync>
                                <span aria-hidden="true">&times;</span>
                            </button>
                        }
                    </div>
                }
                
                <div class="modal-body">
                    @BodyTemplate(null)
                </div>

                @if (FooterTemplate != null)
                {
                    <div class="modal-footer">
                        @FooterTemplate(null)
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string ModalId { get; set; }

    [Parameter]
    public string ModalTitle { get; set; }

    [Parameter]
    public bool HasCloseButton { get; set; } = true;

    [Parameter]
    public RenderFragment<object> ContentElementTemplate { get; set; }

    [Parameter]
    public RenderFragment<object> HeaderElementTemplate { get; set; }

    [Parameter]
    public RenderFragment<object> HeaderTemplate { get; set; }

    [Parameter]
    public RenderFragment<object> BodyTemplate { get; set; }

    [Parameter]
    public RenderFragment<object> FooterTemplate { get; set; }

    [Parameter]
    public Func<Task> OnCloseModalAsync { get; set; }

    private async Task OnCloseModalClickAsync(MouseEventArgs args)
    {
        await jsRuntime.InvokeVoidAsync(TrmrkJsH.Get(TrmrkJsH.CloseModal), ModalId);
        await OnCloseModalAsync.InvokeAsyncIfReq();
    }
}
