@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Turmerik.AspNetCore.Infrastructure
@using System.Web;
@using Turmerik.Blazor.Core.Pages.Components
@using Turmerik.Core.Helpers;

@inherits DriveItemOptionsModalBase

@inject IJSRuntime jsRuntime;

<DriveItemModal
    ModalId=@ModalId
    DriveItemName=@DriveItemName
    AllowAllToClipboard=@AllowAllToClipboard
    AllowDriveItemNameToClipboard=@AllowDriveItemNameToClipboard
    DriveItemAddress=@DriveItemAddress
    ShowDriveItemAddress=@ShowDriveItemAddress
    DriveItemUri=@DriveItemUri
    ShowDriveItemUri=@ShowDriveItemUri
    DriveItemId=@DriveItemId
    OnCloseModalAsync=@OnCloseModalAsync
    IsFolderItem=@IsFolderItem>
    <BodyContentTemplate Context="bodyContentCtx">
        @{
            bool isFirstGroup = true;
        }

        @if (CommandsMx != null)
        {
            int len = CommandsMx.Count;

            @for (int i = 0; i < len; i++)
            {
                var commandsList = CommandsMx[i];

                if (!isFirstGroup)
                {
                    <hr />
                }

                isFirstGroup = isFirstGroup && commandsList == null;

                if (commandsList != null)
                {
                    <ul class="@CssClassH.ItemsList">
                        @foreach (var cmd in commandsList)
                        {
                            <li>
                                <button
                                    type="button"
                                    class="btn btn-dark @CssClassH.Btn"
                                    @onmouseup=@cmd.Action>
                                    @cmd.CommandText
                                </button>
                            </li>
                        }
                    </ul>
                }
            }

            @if (!isFirstGroup)
            {
                <hr />
            }
        }
    </BodyContentTemplate>
</DriveItemModal>

@code {
    [Parameter]
    public string ModalId { get; set; }

    [Parameter]
    public string DriveItemName { get; set; }
    
    [Parameter]
    public bool AllowAllToClipboard { get; set; }
    
    [Parameter]
    public bool AllowDriveItemNameToClipboard { get; set; }
    
    [Parameter]
    public string DriveItemAddress { get; set; }
    
    [Parameter]
    public bool ShowDriveItemAddress { get; set; }
    
    [Parameter]
    public string DriveItemUri { get; set; }
    
    [Parameter]
    public bool ShowDriveItemUri { get; set; }

    [Parameter]
    public string DriveItemId { get; set; }

    [Parameter]
    public List<List<IDriveItemCommand>> CommandsMx { get; set; }

    [Parameter]
    public Func<Task> OnCloseModalAsync { get; set; }

    [Parameter]
    public bool IsFolderItem { get; set; }
}
